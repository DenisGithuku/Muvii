// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.tv_shows.domain.use_cases;

import com.denisgithuku.core_data.providers.DispatcherProvider;
import com.denisgithuku.tv_shows.domain.repository.TvRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetShowDetails_Factory implements Factory<GetShowDetails> {
  private final Provider<TvRepository> tvRepositoryProvider;

  private final Provider<DispatcherProvider> dispatcherProvider;

  public GetShowDetails_Factory(Provider<TvRepository> tvRepositoryProvider,
      Provider<DispatcherProvider> dispatcherProvider) {
    this.tvRepositoryProvider = tvRepositoryProvider;
    this.dispatcherProvider = dispatcherProvider;
  }

  @Override
  public GetShowDetails get() {
    return newInstance(tvRepositoryProvider.get(), dispatcherProvider.get());
  }

  public static GetShowDetails_Factory create(Provider<TvRepository> tvRepositoryProvider,
      Provider<DispatcherProvider> dispatcherProvider) {
    return new GetShowDetails_Factory(tvRepositoryProvider, dispatcherProvider);
  }

  public static GetShowDetails newInstance(TvRepository tvRepository,
      DispatcherProvider dispatcherProvider) {
    return new GetShowDetails(tvRepository, dispatcherProvider);
  }
}
