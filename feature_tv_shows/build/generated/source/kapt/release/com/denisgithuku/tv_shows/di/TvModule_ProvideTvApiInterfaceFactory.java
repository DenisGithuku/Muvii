// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.tv_shows.di;

import com.denisgithuku.tv_shows.data.data_src.remote.api.TvApiInterface;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TvModule_ProvideTvApiInterfaceFactory implements Factory<TvApiInterface> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public TvModule_ProvideTvApiInterfaceFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public TvApiInterface get() {
    return provideTvApiInterface(okHttpClientProvider.get());
  }

  public static TvModule_ProvideTvApiInterfaceFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new TvModule_ProvideTvApiInterfaceFactory(okHttpClientProvider);
  }

  public static TvApiInterface provideTvApiInterface(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(TvModule.INSTANCE.provideTvApiInterface(okHttpClient));
  }
}
