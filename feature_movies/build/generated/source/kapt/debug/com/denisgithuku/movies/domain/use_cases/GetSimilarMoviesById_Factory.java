// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.movies.domain.use_cases;

import com.denisgithuku.movies.domain.repository.MoviesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetSimilarMoviesById_Factory implements Factory<GetSimilarMoviesById> {
  private final Provider<MoviesRepository> moviesRepositoryProvider;

  public GetSimilarMoviesById_Factory(Provider<MoviesRepository> moviesRepositoryProvider) {
    this.moviesRepositoryProvider = moviesRepositoryProvider;
  }

  @Override
  public GetSimilarMoviesById get() {
    return newInstance(moviesRepositoryProvider.get());
  }

  public static GetSimilarMoviesById_Factory create(
      Provider<MoviesRepository> moviesRepositoryProvider) {
    return new GetSimilarMoviesById_Factory(moviesRepositoryProvider);
  }

  public static GetSimilarMoviesById newInstance(MoviesRepository moviesRepository) {
    return new GetSimilarMoviesById(moviesRepository);
  }
}
