// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.movies.di;

import com.denisgithuku.core.data.local.FavouriteMoviesDao;
import com.denisgithuku.movies.data.data_src.remote.MoviesApiInterface;
import com.denisgithuku.movies.domain.repository.MoviesRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MoviesModule_ProvideMoviesRepositoryFactory implements Factory<MoviesRepository> {
  private final Provider<MoviesApiInterface> moviesApiInterfaceProvider;

  private final Provider<FavouriteMoviesDao> favouriteMoviesDaoProvider;

  public MoviesModule_ProvideMoviesRepositoryFactory(
      Provider<MoviesApiInterface> moviesApiInterfaceProvider,
      Provider<FavouriteMoviesDao> favouriteMoviesDaoProvider) {
    this.moviesApiInterfaceProvider = moviesApiInterfaceProvider;
    this.favouriteMoviesDaoProvider = favouriteMoviesDaoProvider;
  }

  @Override
  public MoviesRepository get() {
    return provideMoviesRepository(moviesApiInterfaceProvider.get(), favouriteMoviesDaoProvider.get());
  }

  public static MoviesModule_ProvideMoviesRepositoryFactory create(
      Provider<MoviesApiInterface> moviesApiInterfaceProvider,
      Provider<FavouriteMoviesDao> favouriteMoviesDaoProvider) {
    return new MoviesModule_ProvideMoviesRepositoryFactory(moviesApiInterfaceProvider, favouriteMoviesDaoProvider);
  }

  public static MoviesRepository provideMoviesRepository(MoviesApiInterface moviesApiInterface,
      FavouriteMoviesDao favouriteMoviesDao) {
    return Preconditions.checkNotNullFromProvides(MoviesModule.INSTANCE.provideMoviesRepository(moviesApiInterface, favouriteMoviesDao));
  }
}
