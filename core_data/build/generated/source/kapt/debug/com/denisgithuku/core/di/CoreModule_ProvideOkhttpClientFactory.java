// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvideOkhttpClientFactory implements Factory<OkHttpClient> {
  @Override
  public OkHttpClient get() {
    return provideOkhttpClient();
  }

  public static CoreModule_ProvideOkhttpClientFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static OkHttpClient provideOkhttpClient() {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.provideOkhttpClient());
  }

  private static final class InstanceHolder {
    private static final CoreModule_ProvideOkhttpClientFactory INSTANCE = new CoreModule_ProvideOkhttpClientFactory();
  }
}
