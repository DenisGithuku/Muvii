// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core.di;

import com.denisgithuku.core.data.local.FavouriteMoviesDao;
import com.denisgithuku.core.data.local.MoviesDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvideFavouriteMoviesDaoFactory implements Factory<FavouriteMoviesDao> {
  private final Provider<MoviesDatabase> moviesDatabaseProvider;

  public CoreModule_ProvideFavouriteMoviesDaoFactory(
      Provider<MoviesDatabase> moviesDatabaseProvider) {
    this.moviesDatabaseProvider = moviesDatabaseProvider;
  }

  @Override
  public FavouriteMoviesDao get() {
    return provideFavouriteMoviesDao(moviesDatabaseProvider.get());
  }

  public static CoreModule_ProvideFavouriteMoviesDaoFactory create(
      Provider<MoviesDatabase> moviesDatabaseProvider) {
    return new CoreModule_ProvideFavouriteMoviesDaoFactory(moviesDatabaseProvider);
  }

  public static FavouriteMoviesDao provideFavouriteMoviesDao(MoviesDatabase moviesDatabase) {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.provideFavouriteMoviesDao(moviesDatabase));
  }
}
