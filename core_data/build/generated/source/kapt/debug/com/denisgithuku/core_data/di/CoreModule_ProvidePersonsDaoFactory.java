// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core_data.di;

import com.denisgithuku.core_data.data.local.MoviesDatabase;
import com.denisgithuku.core_data.data.local.PersonsDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvidePersonsDaoFactory implements Factory<PersonsDao> {
  private final Provider<MoviesDatabase> moviesDatabaseProvider;

  public CoreModule_ProvidePersonsDaoFactory(Provider<MoviesDatabase> moviesDatabaseProvider) {
    this.moviesDatabaseProvider = moviesDatabaseProvider;
  }

  @Override
  public PersonsDao get() {
    return providePersonsDao(moviesDatabaseProvider.get());
  }

  public static CoreModule_ProvidePersonsDaoFactory create(
      Provider<MoviesDatabase> moviesDatabaseProvider) {
    return new CoreModule_ProvidePersonsDaoFactory(moviesDatabaseProvider);
  }

  public static PersonsDao providePersonsDao(MoviesDatabase moviesDatabase) {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.providePersonsDao(moviesDatabase));
  }
}
