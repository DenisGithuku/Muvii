// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core.di;

import android.content.Context;
import com.denisgithuku.core.providers.UserPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvideUserPrefsFactory implements Factory<UserPreferences> {
  private final Provider<Context> contextProvider;

  public CoreModule_ProvideUserPrefsFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public UserPreferences get() {
    return provideUserPrefs(contextProvider.get());
  }

  public static CoreModule_ProvideUserPrefsFactory create(Provider<Context> contextProvider) {
    return new CoreModule_ProvideUserPrefsFactory(contextProvider);
  }

  public static UserPreferences provideUserPrefs(Context context) {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.provideUserPrefs(context));
  }
}
