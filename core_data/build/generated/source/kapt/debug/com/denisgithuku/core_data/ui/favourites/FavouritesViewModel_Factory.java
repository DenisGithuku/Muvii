// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core_data.ui.favourites;

import com.denisgithuku.core_data.domain.use_cases.CoreMuviiUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FavouritesViewModel_Factory implements Factory<FavouritesViewModel> {
  private final Provider<CoreMuviiUseCases> coreMuviiUseCasesProvider;

  public FavouritesViewModel_Factory(Provider<CoreMuviiUseCases> coreMuviiUseCasesProvider) {
    this.coreMuviiUseCasesProvider = coreMuviiUseCasesProvider;
  }

  @Override
  public FavouritesViewModel get() {
    return newInstance(coreMuviiUseCasesProvider.get());
  }

  public static FavouritesViewModel_Factory create(
      Provider<CoreMuviiUseCases> coreMuviiUseCasesProvider) {
    return new FavouritesViewModel_Factory(coreMuviiUseCasesProvider);
  }

  public static FavouritesViewModel newInstance(CoreMuviiUseCases coreMuviiUseCases) {
    return new FavouritesViewModel(coreMuviiUseCases);
  }
}
