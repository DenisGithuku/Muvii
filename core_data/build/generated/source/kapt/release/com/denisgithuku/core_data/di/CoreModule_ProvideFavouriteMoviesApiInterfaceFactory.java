// Generated by Dagger (https://dagger.dev).
package com.denisgithuku.core_data.di;

import com.denisgithuku.core_data.data.remote.CoreInterface;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoreModule_ProvideFavouriteMoviesApiInterfaceFactory implements Factory<CoreInterface> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public CoreModule_ProvideFavouriteMoviesApiInterfaceFactory(
      Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public CoreInterface get() {
    return provideFavouriteMoviesApiInterface(okHttpClientProvider.get());
  }

  public static CoreModule_ProvideFavouriteMoviesApiInterfaceFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new CoreModule_ProvideFavouriteMoviesApiInterfaceFactory(okHttpClientProvider);
  }

  public static CoreInterface provideFavouriteMoviesApiInterface(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(CoreModule.INSTANCE.provideFavouriteMoviesApiInterface(okHttpClient));
  }
}
